# Playbook demonstrating the use of the openstack.cloud.* modules for automation of
# creation of OpenStack resources. This bootstrap the initial resources
# generally not created by default following a fresh installation of Openstack
# 
# This playbook performs the following actions with ansible variables defined in
# a vars file
# - creates an openstack project/tenant
# - sets OpenStack resource quotes for project/tenant
# - creates Openstack local users for project/tenant
# - configures OpenStack role assignments to local users in the project/tenant
# - creates neutron tenant networks
# - creates neutron tenant subnets
# - creates neutron router
# - creates security groups
# - create security group rules
---
- name: Begin to boostrap OpenStack project.
  hosts: ansible_executor
  become: false
  vars_files:
    - vars/vaulted/openstack_auth.yml
    - vars/openstack_resources_voltron_labs.yml
  tasks:
    - name: Create OpenStack projects for this environment
      openstack.cloud.project:
        auth:
          auth_url: '{{ openstack_auth_url }}'
          username: '{{ openstack_username }}'
          password: '{{ openstack_user_passwd }}'
          project_name: '{{ openstack_project_name }}'
          project_domain_name: '{{ openstack_project_domain_name | default("Default") }}'
          user_domain_name: '{{ openstack_user_domain_name | default("Default") }}'
        endpoint_type: '{{ osp_interface_type | default("public") }}'
        domain_id: '{{ item.keystone_domain | string }}'
        name: '{{ item.name | string }}'
        state: present
        enabled: true
      loop: '{{ osp_projects }}'
      when: create_openstack_projects == True
      tags:
        - create_project

    - name: Set OpenStack quotas for project
      openstack.cloud.quota:
        auth:
          auth_url: '{{ openstack_auth_url }}'
          username: '{{ openstack_username }}'
          password: '{{ openstack_user_passwd }}'
          project_name: '{{ openstack_project_name }}'
          project_domain_name: '{{ openstack_project_domain_name | default("Default") }}'
          user_domain_name: '{{ openstack_user_domain_name | default("Default") }}'
        interface: '{{ osp_interface_type | default("public") }}'
        name: '{{ item.name | string }}'
        instances: '{{ item.quotas.total_instances | int }}'
        cores: '{{ item.quotas.total_cores | int }}'
        ram: '{{ item.quotas.total_ram_mb | int }}'
        gigabytes: '{{ item.quotas.total_disk_gb | int }}'
        volumes: '{{ item.quotas.total_volumes | int }}'
      loop: '{{ osp_projects }}'
      when: create_openstack_projects == True
      tags:
        - create_project
        - set_quotas

    - name: Configure role assignments for OpenStack
      openstack.cloud.role_assignment:
        auth:
          auth_url: '{{ openstack_auth_url }}'
          username: '{{ openstack_username }}'
          password: '{{ openstack_user_passwd }}'
          project_name: '{{ openstack_project_name }}'
          project_domain_name: '{{ openstack_project_domain_name | default("Default") }}'
          user_domain_name: '{{ openstack_user_domain_name | default("Default") }}'
        interface: '{{ osp_interface_type | default("public") }}'
        user: '{{ item.user_name | string }}' 
        role: '{{ item.project_role | string }}'
        project: '{{ item.project | string }}'
        domain: '{{ item.keystone_domain | string }}'
        state: present
      loop: '{{ osp_role_assignment }}'
      no_log: true
      when: create_openstack_role_assignments == True
      tags:
        - create_role_assignments

    - name: Creating neutron tenant network resources
      openstack.cloud.network:
        auth:
          auth_url: '{{ openstack_auth_url }}'
          username: '{{ openstack_username }}'
          password: '{{ openstack_user_passwd }}'
          project_name: '{{ openstack_project_name }}'
          project_domain_name: '{{ openstack_project_domain_name | default("Default") }}'
          user_domain_name: '{{ openstack_user_domain_name | default("Default") }}'
        interface: '{{ osp_interface_type | default("public") }}'
        project: '{{ item.network_project_owner | default("admin") | string }}'
        name: '{{ item.net_name | string }}' 
        external: '{{ item.net_external | default(false) | bool }}'
        shared: '{{ item.net_is_shared | default(false) | bool }}'
        provider_network_type: '{{ item.provider_network_type | default("geneve") | string }}'
        port_security_enabled: '{{ item.enable_port_security | default(true) | int }}'
        state: present
      loop: '{{ osp_tenant_networks }}'
      when: create_tenant_networks == True
      tags:
        - create_tenant_networks

    - name: Creating neutron tenant subnets resources
      openstack.cloud.subnet:
        auth:
          auth_url: '{{ openstack_auth_url }}'
          username: '{{ openstack_username }}'
          password: '{{ openstack_user_passwd }}'
          project_name: '{{ openstack_project_name }}'
          project_domain_name: '{{ openstack_project_domain_name | default("Default") }}'
          user_domain_name: '{{ openstack_user_domain_name | default("Default") }}'
        interface: '{{ osp_interface_type | default("public") }}'
        network_name: '{{ item.net_name | string }}'
        project: '{{ item.network_project_owner | default("admin") | string }}'
        name: '{{ item.subnets.subnet_name | string }}'
        cidr: '{{ item.subnets.subnet_cidr | string }}'
        gateway_ip: '{{ item.subnets.subnet_gateway | string }}'
        allocation_pool_start: '{{ item.subnets.subnet_dhcp_start | string }}'
        allocation_pool_end: '{{ item.subnets.subnet_dhcp_end | string }}'
        enable_dhcp: '{{ item.subnets.subnet_enable_dhcp | default(true) | bool }}'
        dns_nameservers:
          - '{{ item.subnets.dns_1 }}'
          - '{{ item.subnets.dns_2 }}'
        state: present
      loop: '{{ osp_tenant_networks }}'
      when: create_tenant_networks == True
      tags:
        - create_tenant_networks

    - name: Creating neutron routers ## needs work 02-25-2024 arl ## 
      openstack.cloud.router:
        auth:
          auth_url: '{{ openstack_auth_url }}'
          username: '{{ openstack_username }}'
          password: '{{ openstack_user_passwd }}'
          project_name: '{{ openstack_project_name }}'
          project_domain_name: '{{ openstack_project_domain_name | default("Default") }}'
          user_domain_name: '{{ openstack_user_domain_name | default("Default") }}'
        interface: '{{ osp_interface_type | default("public") }}'
        project: '{{ item.router_project_owner | default("admin") }}'
        name: '{{ item.router_name | string }}' 
        network: '{{ item.router_gateway_network | string }}'
        interfaces: '{{ item.router_private_subnet_interface }}'
        state: present
      loop: '{{ osp_neutron_routers }}'
      when: create_neutron_routers == True
      tags:
        - create_routers

    - name: Creating project security groups
      openstack.cloud.security_group:
        auth:
          auth_url: '{{ openstack_auth_url }}'
          username: '{{ openstack_username }}'
          password: '{{ openstack_user_passwd }}'
          project_name: '{{ openstack_project_name }}'
          project_domain_name: '{{ openstack_project_domain | default("Default") }}'
          user_domain_name: '{{ openstack_user_domain_name | default("Default") }}'
        name: '{{ item.secgroup_name }}'
        project: '{{ item.secgroup_owner_project }}'
        state: present
      loop: '{{ osp_sec_groups }}'
      when: create_project_security_groups == True
      tags:
        - create_security_group

    - name: Creating project security group rules
      openstack.cloud.security_group_rule:
        auth:
          auth_url: '{{ openstack_auth_url }}'
          username: '{{ openstack_username }}'
          password: '{{ openstack_user_passwd }}'
          project_name: '{{ openstack_project_name }}'
          project_domain_name: '{{ openstack_project_domain | default("Default") }}'
          user_domain_name: '{{ openstack_user_domain_name | default("Default") }}'
        security_group: '{{ item.0.secgroup_name | string }}'
        project: '{{ item.0.secgroup_owner_project | string }}'
        direction: '{{ item.1.direction | default("ingress" | string) }}'
        ethertype: '{{ item.1.ethertype | default("IPv4" | string) }}'
        protocol: '{{ item.1.protocol | default("tcp" | string) }}'
        remote_ip_prefix: '{{ item.1.source_network | default("0.0.0.0.0" | string) }}'
        port_range_min: '{{ item.1.port_range_min | int }}'
        port_range_max: '{{ item.1.port_range_max | int }}'
        state: present
      with_subelements:
        - '{{ osp_sec_groups }}'
        - sec_group_rules
      when: create_project_security_groups == True
      tags:
        - create_security_group

